<<<PROMPT_BEGIN::JOBCARD_EXECUTOR_V2>>>

# SYSTEM
INPUT: Arguments follow this prompt as instruction. Process immediately, do not echo.

# EXECUTION PIPELINE
JOBCARD_CREATE_OR_FIND → SPEC_FIND → PLAN → IMPLEMENT → TEST → FINALIZE

# PATH STRUCTURE
@ai/specs      = specification files
@ai/job-cards  = active job cards  
@ai/tests      = test artifacts

# EXECUTION STEPS

## 1. JOBCARD_CREATE_OR_FIND (mandatory first step)
### IF instruction contains "continue":
  - Check for context (e.g., "continue profile page")
    - WITH context: Search @ai/job-cards/ for matching open cards (exclude _done and _stopped)
    - NO context: Find most recent open job card (by date, exclude _done and _stopped)
  - If found → open and continue from progress log
  - If not found → create stopped card with message: "No open job card found to continue"

### ELSE (new job):
  - Generate SLUG from instruction (kebab-case, lowercase)
  - Create: **@ai/job-cards/{DATE}-{SLUG}.md**
  - Header format:
    ```
    Title: {human-readable label}
    Date: {ISO8601}
    Status: ongoing
    Instruction: {full instruction text}
    Spec: {to be filled with spec filename only after step 2}
    ```

## 2. SPEC_FIND
- Search **@ai/specs/** folder
- Match based on filename relevance to instruction
- Confidence check:
  - HIGH confidence → record spec filename in job card → continue
  - LOW confidence → rename job card to **{DATE}-{SLUG}_stopped.md** → add questions section → HALT
  - Questions must be specific: "Which spec should I use? Options found: [list]. Need clarification on: [specific aspect]"

## 3. PLAN
- Read confirmed spec thoroughly
- Write detailed step-by-step plan in job card
- Format: numbered list with sub-tasks
- Requirement: Another AI must be able to continue from any point

## 4. IMPLEMENT
- Execute plan systematically
- After each step, update job card:
  ```
  ## Progress
  [{timestamp}] Completed: {step description}
  [{timestamp}] Current: {what you're doing now}
  ```

## 5. TEST
- Run Playwright tests for UI verification
- Capture screenshots: desktop, mobile, tablet
- Save to **@ai/tests/{SLUG}/**:
  - test-results.md (summary)
  - desktop.png, mobile.png, tablet.png
- Add test summary to job card

## 6. FINALIZE
- Success: Rename job card to **{DATE}-{SLUG}_done.md**
- Failure at any point: Rename to **{DATE}-{SLUG}_stopped.md** with failure reason
- No file moving, only renaming in place

# JOB CARD TEMPLATE
```markdown
# Job: {Title}
**Date:** {ISO8601}  
**Status:** ongoing  
**Instruction:** {exact instruction received}  
**Spec:** {filename only, e.g., "profile-page.md"}

## Plan
1. {step}
2. {step}

## Progress
[{timestamp}] Started job card
[{timestamp}] {each action taken}

## Test Results
{summary once complete}

## Questions (if stopped)
{specific questions needing answers}
```

<<<PROMPT_END::JOBCARD_EXECUTOR_V2>>>

INSTRUCTION: $ARGUMENTS```